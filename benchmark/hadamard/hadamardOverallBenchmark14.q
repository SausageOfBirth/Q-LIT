def q = qbit(|111111111111111>);

def c = qcirc(15,15);

c.attach(q);

c.add(0,[0],hadamard);
c.add(0,[1],hadamard);
c.add(0,[2],hadamard);
c.add(0,[3],hadamard);
c.add(0,[4],hadamard);
c.add(0,[5],hadamard);
c.add(0,[6],hadamard);
c.add(0,[7],hadamard);
c.add(0,[8],hadamard);
c.add(0,[9],hadamard);
c.add(0,[10],hadamard);
c.add(0,[11],hadamard);
c.add(0,[12],hadamard);
c.add(0,[13],hadamard);
c.add(0,[14],hadamard);
c.add(1,[0],hadamard);
c.add(1,[1],hadamard);
c.add(1,[2],hadamard);
c.add(1,[3],hadamard);
c.add(1,[4],hadamard);
c.add(1,[5],hadamard);
c.add(1,[6],hadamard);
c.add(1,[7],hadamard);
c.add(1,[8],hadamard);
c.add(1,[9],hadamard);
c.add(1,[10],hadamard);
c.add(1,[11],hadamard);
c.add(1,[12],hadamard);
c.add(1,[13],hadamard);
c.add(1,[14],hadamard);
c.add(2,[0],hadamard);
c.add(2,[1],hadamard);
c.add(2,[2],hadamard);
c.add(2,[3],hadamard);
c.add(2,[4],hadamard);
c.add(2,[5],hadamard);
c.add(2,[6],hadamard);
c.add(2,[7],hadamard);
c.add(2,[8],hadamard);
c.add(2,[9],hadamard);
c.add(2,[10],hadamard);
c.add(2,[11],hadamard);
c.add(2,[12],hadamard);
c.add(2,[13],hadamard);
c.add(2,[14],hadamard);
c.add(3,[0],hadamard);
c.add(3,[1],hadamard);
c.add(3,[2],hadamard);
c.add(3,[3],hadamard);
c.add(3,[4],hadamard);
c.add(3,[5],hadamard);
c.add(3,[6],hadamard);
c.add(3,[7],hadamard);
c.add(3,[8],hadamard);
c.add(3,[9],hadamard);
c.add(3,[10],hadamard);
c.add(3,[11],hadamard);
c.add(3,[12],hadamard);
c.add(3,[13],hadamard);
c.add(3,[14],hadamard);
c.add(4,[0],hadamard);
c.add(4,[1],hadamard);
c.add(4,[2],hadamard);
c.add(4,[3],hadamard);
c.add(4,[4],hadamard);
c.add(4,[5],hadamard);
c.add(4,[6],hadamard);
c.add(4,[7],hadamard);
c.add(4,[8],hadamard);
c.add(4,[9],hadamard);
c.add(4,[10],hadamard);
c.add(4,[11],hadamard);
c.add(4,[12],hadamard);
c.add(4,[13],hadamard);
c.add(4,[14],hadamard);
c.add(5,[0],hadamard);
c.add(5,[1],hadamard);
c.add(5,[2],hadamard);
c.add(5,[3],hadamard);
c.add(5,[4],hadamard);
c.add(5,[5],hadamard);
c.add(5,[6],hadamard);
c.add(5,[7],hadamard);
c.add(5,[8],hadamard);
c.add(5,[9],hadamard);
c.add(5,[9],hadamard);
c.add(5,[10],hadamard);
c.add(5,[11],hadamard);
c.add(5,[12],hadamard);
c.add(5,[13],hadamard);
c.add(5,[14],hadamard);
c.add(6,[0],hadamard);
c.add(6,[1],hadamard);
c.add(6,[2],hadamard);
c.add(6,[3],hadamard);
c.add(6,[4],hadamard);
c.add(6,[5],hadamard);
c.add(6,[6],hadamard);
c.add(6,[7],hadamard);
c.add(6,[8],hadamard);
c.add(6,[9],hadamard);
c.add(6,[10],hadamard);
c.add(6,[11],hadamard);
c.add(6,[12],hadamard);
c.add(6,[13],hadamard);
c.add(6,[14],hadamard);
c.add(7,[0],hadamard);
c.add(7,[1],hadamard);
c.add(7,[2],hadamard);
c.add(7,[3],hadamard);
c.add(7,[4],hadamard);
c.add(7,[5],hadamard);
c.add(7,[6],hadamard);
c.add(7,[7],hadamard);
c.add(7,[8],hadamard);
c.add(7,[9],hadamard);
c.add(7,[10],hadamard);
c.add(7,[11],hadamard);
c.add(7,[12],hadamard);
c.add(7,[13],hadamard);
c.add(7,[14],hadamard);
c.add(8,[0],hadamard);
c.add(8,[1],hadamard);
c.add(8,[2],hadamard);
c.add(8,[3],hadamard);
c.add(8,[4],hadamard);
c.add(8,[5],hadamard);
c.add(8,[6],hadamard);
c.add(8,[7],hadamard);
c.add(8,[8],hadamard);
c.add(8,[9],hadamard);
c.add(8,[10],hadamard);
c.add(8,[11],hadamard);
c.add(8,[12],hadamard);
c.add(8,[13],hadamard);
c.add(8,[14],hadamard);
c.add(9,[0],hadamard);
c.add(9,[1],hadamard);
c.add(9,[2],hadamard);
c.add(9,[3],hadamard);
c.add(9,[4],hadamard);
c.add(9,[5],hadamard);
c.add(9,[6],hadamard);
c.add(9,[7],hadamard);
c.add(9,[8],hadamard);
c.add(9,[9],hadamard);
c.add(9,[10],hadamard);
c.add(9,[11],hadamard);
c.add(9,[12],hadamard);
c.add(9,[13],hadamard);
c.add(9,[14],hadamard);
c.add(10,[0],hadamard);
c.add(10,[1],hadamard);
c.add(10,[2],hadamard);
c.add(10,[3],hadamard);
c.add(10,[4],hadamard);
c.add(10,[5],hadamard);
c.add(10,[6],hadamard);
c.add(10,[7],hadamard);
c.add(10,[8],hadamard);
c.add(10,[9],hadamard);
c.add(10,[10],hadamard);
c.add(10,[11],hadamard);
c.add(10,[12],hadamard);
c.add(10,[13],hadamard);
c.add(10,[14],hadamard);
c.add(11,[0],hadamard);
c.add(11,[1],hadamard);
c.add(11,[2],hadamard);
c.add(11,[3],hadamard);
c.add(11,[4],hadamard);
c.add(11,[5],hadamard);
c.add(11,[6],hadamard);
c.add(11,[7],hadamard);
c.add(11,[8],hadamard);
c.add(11,[9],hadamard);
c.add(11,[10],hadamard);
c.add(11,[11],hadamard);
c.add(11,[12],hadamard);
c.add(11,[13],hadamard);
c.add(11,[14],hadamard);
c.add(12,[0],hadamard);
c.add(12,[1],hadamard);
c.add(12,[2],hadamard);
c.add(12,[3],hadamard);
c.add(12,[4],hadamard);
c.add(12,[5],hadamard);
c.add(12,[6],hadamard);
c.add(12,[7],hadamard);
c.add(12,[8],hadamard);
c.add(12,[9],hadamard);
c.add(12,[10],hadamard);
c.add(12,[11],hadamard);
c.add(12,[12],hadamard);
c.add(12,[13],hadamard);
c.add(12,[14],hadamard);
c.add(13,[0],hadamard);
c.add(13,[1],hadamard);
c.add(13,[2],hadamard);
c.add(13,[3],hadamard);
c.add(13,[4],hadamard);
c.add(13,[5],hadamard);
c.add(13,[6],hadamard);
c.add(13,[7],hadamard);
c.add(13,[8],hadamard);
c.add(13,[9],hadamard);
c.add(13,[10],hadamard);
c.add(13,[11],hadamard);
c.add(13,[12],hadamard);
c.add(13,[13],hadamard);
c.add(13,[14],hadamard);
c.add(14,[0],hadamard);
c.add(14,[1],hadamard);
c.add(14,[2],hadamard);
c.add(14,[3],hadamard);
c.add(14,[4],hadamard);
c.add(14,[5],hadamard);
c.add(14,[6],hadamard);
c.add(14,[7],hadamard);
c.add(14,[8],hadamard);
c.add(14,[9],hadamard);
c.add(14,[10],hadamard);
c.add(14,[11],hadamard);
c.add(14,[12],hadamard);
c.add(14,[13],hadamard);
c.add(14,[14],hadamard);